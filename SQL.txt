create database event;

use event;

drop table Login;


create table SignUp(
Id int(3),
Username varchar(100),
Email varchar(100),
SignUpPassword varchar(255),
ConfirmSignUpPassword varchar(255)
);

addevent
Id	varchar(3)	NO	PRI		
Category	varchar(50)	YES	UNI		
Location	varchar(50)	YES			
Capacity	varchar(50)	YES			
Amount	varchar(50)	YES			
Description	varchar(100)	YES			
Status	varchar(50)	YES			
Address	varchar(300)	YES			
Contact	varchar(10)	YES			
ImagePath	varchar(600)	YES			



delimiter //
CREATE PROCEDURE `GetAllUser`()
begin
	select * from SignUp;
end //
delimiter ;



delimiter //
CREATE PROCEDURE `GetUserPassword`(
	IN IEmail varchar(100)
)
BEGIN
	 SELECT SPassword from SignUp where Email = IEmail;
END //
delimiter ;




delimiter //
CREATE  PROCEDURE `InsertUser`(
	IN UserName varchar(100),
	IN Email varchar(100),
	IN SPassword varchar(100)
)
BEGIN
	INSERT INTO SignUp(Username, Email, SPassword)
	VALUES(UserName,Email,md5(SPassword)); 
END //
delimiter ;



delimiter //
CREATE PROCEDURE `CheckEmailExist`(IN newEmail VARCHAR(60))
BEGIN
    DECLARE emailExists BOOLEAN;
    SELECT EXISTS(
		SELECT 1 FROM SignUp WHERE Email = newEmail
	) INTO emailExists;
    SELECT emailExists AS IsExists;
END //
delimiter ;



delimiter //
create procedure EncryptMD5(
	IN existingEmail varchar(255),
	IN existingPassword varchar(255)
)
begin
	select Email, SPassword from SignUp 
    where Email=existingEmail and SPassword = MD5(existingPassword);
END //
delimiter ;

delimiter//
CREATE PROCEDURE `GetPassword`(
	IN user_pass varchar(100)
)
BEGIN
	select MD5(user_pass);
END //
delimiter ;

CREATE DEFINER=`root`@`localhost` PROCEDURE `AddEventInsert`(
	IN Id varchar(3),
    IN Category varchar(50),
    IN Location varchar(50),
    IN Capacity varchar(10),
    IN Amount varchar(50),
    IN Description varchar(200),    
    IN Status varchar(50),	
	IN Address varchar(100),	
	IN Contact varchar(10),
    IN ImagePath varchar(600)
)
BEGIN
	INSERT INTO addevent(Id, Category, Location, Capacity, Amount, Description, Status, Address, Contact, ImagePath)
    VALUES(Id,Category,Location,Capacity, Amount, Description, Status, Address, Contact, ImagePath);
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `DeleteAddEventById`(
    IN Id varchar(3)
)
BEGIN
    DELETE FROM addevent
    WHERE Id = Id;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `GetAddEventbyId`(IN id varchar(3))
BEGIN
    SELECT * FROM addevent WHERE Id = id;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `GetAllEvent`()
BEGIN
	SELECT * from addevent;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `GetDBImagebyID`(IN ID varchar(3))
BEGIN
    SELECT ImagePath FROM addevent WHERE Id = ID;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `GetRole`(
	IN IEmail varchar(100)
)
BEGIN
	 SELECT AccessRole from SignUp where Email = IEmail;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `UpdateaddEventById`(
    IN Id varchar(3),
    IN Category varchar(50),
    IN Location varchar(50),
    IN Capacity varchar(10),
    IN Amount varchar(50),
    IN Description varchar(200),    
    IN Status varchar(50),	
	IN Address varchar(100),	
	IN Contact varchar(10),
    IN ImagePath varchar(600)
)
BEGIN
    UPDATE addevent
    SET
        Category = Category,
        last_name = last_name,
        Location = Location,
        Capacity = Capacity,
        Amount = Amount,
        Description = Description,
		Status = Status,
		Address = Address,
		Contact = Contact,
		ImagePath = ImagePath
    WHERE Id = Id;
END

Delimiter //
CREATE PROCEDURE `GetAllAdmin_User`()
begin
	select * from SignUp;
end //
Delimiter ;

Delimiter //
CREATE PROCEDURE InsertAdmin_User(
	IN UserName varchar(100),
	IN Email varchar(100),
	IN SPassword varchar(100),
    IN AccessRole varchar(100)
)
BEGIN
	INSERT INTO SignUp(Username, Email, SPassword, AccessRole)
	VALUES(UserName,Email,md5(SPassword), AccessRole); 
END //
Delimiter ;

Delimiter //
CREATE PROCEDURE GetAdmin_UserbyId(in id int)
BEGIN
	select * from SignUp where Id = id;
END //
Delimiter ;

Delimiter //
CREATE PROCEDURE Updateadmin_userById(
    IN u_Id int,
    IN Username varchar(50),
    IN Email varchar(50)
)
BEGIN
    UPDATE addevent
    SET
		Username = Username,
		Email = Email
    WHERE Id = u_Id;
END //
Delimiter ;

Delimiter //
CREATE PROCEDURE `Deleteadmin_userById`(
    IN deleteId int
)
BEGIN
    DELETE FROM signup
    WHERE Id = deleteId;
END //
delimiter ;

CREATE DEFINER=`root`@`localhost` PROCEDURE `CheckEmailExist`(IN p_EmailId VARCHAR(60), IN p_Id INT)
BEGIN
    DECLARE emailExists BOOLEAN;
    
    IF p_Id IS NULL THEN
        SELECT EXISTS(
		    SELECT 1 FROM SignUp WHERE Email = p_EmailId
	    ) INTO emailExists;
    ELSE
        SELECT EXISTS(
		    SELECT 1 FROM SignUp WHERE Email = p_EmailId AND Id != p_Id
	    ) INTO emailExists;
    END IF;
    
    SELECT emailExists AS IsExists;
END